version: "3"
services:
  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: ${UMASK_SET}
    volumes:
      - ./docker/syncthing/config:/config
      - ${EXT_DISK}:/DiscoExterno
      - /usr/docker:/dockerConf
      - ./data/SyncFolders:/SyncFolders
    ports:
      - 22000:22000/tcp
      - 21027:21027/udp
    restart: always
    labels:
      - traefik.http.routers.syncthing.rule=Host(`${SYNCTHING_HOST}`)
      - traefik.http.routers.syncthing.tls=true
      - traefik.http.routers.syncthing.tls.certresolver=myresolver
      - traefik.http.middlewares.syncthing.compress=true
      - traefik.http.routers.syncthing.middlewares=syncthing@docker

  nextcloud-db:
    container_name: mariadb
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./docker/mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${NEXTCLOUD_MYSQL_DATABASE}
      MYSQL_USER: ${NEXTCLOUD_MYSQL_USER}
    restart: always
    labels:
      - traefik.enable=false
  nextcloud:
    container_name: nextcloud
    image: nextcloud
    links:
      - nextcloud-db
    volumes:
      - ./data/nextcloud/html:/var/www/html
    restart: always
    labels:
      - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOST}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=myresolver
      - traefik.http.middlewares.nextcloud.compress=true
      - traefik.http.routers.nextcloud.middlewares=nextcloud@docker

  seafile-db:
    container_name: seafile-db
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${SEAFILE_MYSQL_ROOT_PASSWORD}  # Requested, set the root's password of MySQL service.
      MYSQL_LOG_CONSOLE: ${SEAFILE_MYSQL_LOG_CONSOLE}
    volumes:
      - ./docker/seafile/db:/var/lib/mysql  # Requested, specifies the path to MySQL data persistent store.
    restart: always
    labels:
      - traefik.enable=false
  seafile-memcached:
    container_name: seafile-memcached
    image: memcached
    entrypoint: memcached -m 256
    restart: always
    labels:
      - traefik.enable=false
  seafile:
    container_name: seafile
    image: seafileltd/seafile-mc:latest
    volumes:
      - ./data/seafile/data:/shared   # Requested, specifies the path to Seafile data persistent store.
    environment:
      DB_HOST: seafile-db
      DB_ROOT_PASSWD: ${SEAFILE_MYSQL_ROOT_PASSWORD}  # Requested, the value shuold be root's password of MySQL service.
      TIME_ZONE: ${TZ}  # Optional, default is UTC. Should be uncomment and set to your local time zone.
      SEAFILE_ADMIN_EMAIL: ${SEAFILE_ADMIN_EMAIL} # Specifies Seafile admin user, default is 'me@example.com'.
      SEAFILE_ADMIN_PASSWORD: ${SEAFILE_ADMIN_PASSWORD}     # Specifies Seafile admin password, default is 'asecret'.
      SEAFILE_SERVER_LETSENCRYPT: ${SEAFILE_SERVER_LETSENCRYPT}   # Whether to use https or not.
      SEAFILE_SERVER_HOSTNAME: ${SEAFILE_HOST} # Specifies your host name if https is enabled.
    depends_on:
      - seafile-db
      - seafile-memcached
    restart: always
    labels:
      - traefik.http.routers.seafile.rule=Host(`${SEAFILE_HOST}`)
      - traefik.http.routers.seafile.tls=true
      - traefik.http.routers.seafile.tls.certresolver=myresolver
      - traefik.http.middlewares.seafile.compress=true
      - traefik.http.services.seafile.loadbalancer.server.port=80
      - traefik.http.routers.seafile.middlewares=seafile@docker
