version: "3"
services:
  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      UMASK_SET: ${UMASK_SET}
    volumes:
      - ./docker/syncthing/config:/config
      - ${EXT_DISK}:/DiscoExterno
      - /usr/docker:/dockerConf
      - ./data/SyncFolders:/SyncFolders
    ports:
      - 22000:22000/tcp
      - 21027:21027/udp
    restart: always
    labels:
      - traefik.http.routers.syncthing.rule=Host(`${SYNCTHING_HOST}`)
      - traefik.http.routers.syncthing.tls=true
      - traefik.http.routers.syncthing.tls.certresolver=myresolver
      - traefik.http.middlewares.syncthing.compress=true
      - traefik.http.routers.syncthing.middlewares=syncthing@docker

  nextcloud-db:
    container_name: nextcloud-db
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./docker/nextcloud-db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${NEXTCLOUD_MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${NEXTCLOUD_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${NEXTCLOUD_MYSQL_DATABASE}
      MYSQL_USER: ${NEXTCLOUD_MYSQL_USER}
    restart: always
    labels:
      - traefik.enable=false
  nextcloud:
    container_name: nextcloud
    image: nextcloud
    links:
      - nextcloud-db
    volumes:
      - ./data/nextcloud/html:/var/www/html
    restart: always
    labels:
      - traefik.http.routers.nextcloud.rule=Host(`${NEXTCLOUD_HOST}`)
      - traefik.http.routers.nextcloud.tls=true
      - traefik.http.routers.nextcloud.tls.certresolver=myresolver
      - traefik.http.middlewares.nextcloud.compress=true
      - traefik.http.routers.nextcloud.middlewares=nextcloud@docker

  filerun_db:
    container_name: filerun_db
    image: mariadb:10.1
    environment:
      MYSQL_ROOT_PASSWORD: ${FILERUN_DB_ROOT_PASS}
      MYSQL_USER: ${FILERUN_DB_USER}
      MYSQL_PASSWORD: ${FILERUN_DB_PASS}
      MYSQL_DATABASE: ${FILERUN_DB_NAME}
    volumes:
      - ./docker/filerun-db:/var/lib/mysql
    restart: always
  filerun:
    container_name: filerun
    image: afian/filerun
    environment:
      FR_DB_HOST: filerun_db
      FR_DB_PORT: 3306
      FR_DB_NAME: ${FILERUN_DB_NAME}
      FR_DB_USER: ${FILERUN_DB_USER}
      FR_DB_PASS: ${FILERUN_DB_PASS}
      APACHE_RUN_USER: www-data
      APACHE_RUN_USER_ID: 33
      APACHE_RUN_GROUP: www-data
      APACHE_RUN_GROUP_ID: 33
    depends_on:
      - filerun_db
    volumes:
      - ./data/filerun/html:/var/www/html
      - ./data/filerun/user-files:/user-files
    restart: always
    labels:
      - traefik.http.routers.filerun.rule=Host(`${FILERUN_HOST}`)
      - traefik.http.routers.filerun.tls=true
      - traefik.http.routers.filerun.tls.certresolver=myresolver
      - traefik.http.middlewares.filerun.compress=true
      - traefik.http.services.filerun.loadbalancer.server.port=80
      - traefik.http.routers.filerun.middlewares=filerun@docker
